// Code generated by MockGen. DO NOT EDIT.
// Source: account_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	entities "transact-api/model/entities"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountRepository is a mock of AccountRepository interface.
type MockAccountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccountRepositoryMockRecorder
}

// MockAccountRepositoryMockRecorder is the mock recorder for MockAccountRepository.
type MockAccountRepositoryMockRecorder struct {
	mock *MockAccountRepository
}

// NewMockAccountRepository creates a new mock instance.
func NewMockAccountRepository(ctrl *gomock.Controller) *MockAccountRepository {
	mock := &MockAccountRepository{ctrl: ctrl}
	mock.recorder = &MockAccountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountRepository) EXPECT() *MockAccountRepositoryMockRecorder {
	return m.recorder
}

// FindAccountByDocumentNumber mocks base method.
func (m *MockAccountRepository) FindAccountByDocumentNumber(ctx *gin.Context, documentNumber string) (*entities.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAccountByDocumentNumber", ctx, documentNumber)
	ret0, _ := ret[0].(*entities.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAccountByDocumentNumber indicates an expected call of FindAccountByDocumentNumber.
func (mr *MockAccountRepositoryMockRecorder) FindAccountByDocumentNumber(ctx, documentNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAccountByDocumentNumber", reflect.TypeOf((*MockAccountRepository)(nil).FindAccountByDocumentNumber), ctx, documentNumber)
}

// InsertAccount mocks base method.
func (m *MockAccountRepository) InsertAccount(ctx *gin.Context, account entities.Account) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertAccount", ctx, account)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertAccount indicates an expected call of InsertAccount.
func (mr *MockAccountRepositoryMockRecorder) InsertAccount(ctx, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertAccount", reflect.TypeOf((*MockAccountRepository)(nil).InsertAccount), ctx, account)
}
