// Code generated by MockGen. DO NOT EDIT.
// Source: transaction_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	entities "transact-api/model/entities"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockTransactionRepository is a mock of TransactionRepository interface.
type MockTransactionRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionRepositoryMockRecorder
}

// MockTransactionRepositoryMockRecorder is the mock recorder for MockTransactionRepository.
type MockTransactionRepositoryMockRecorder struct {
	mock *MockTransactionRepository
}

// NewMockTransactionRepository creates a new mock instance.
func NewMockTransactionRepository(ctrl *gomock.Controller) *MockTransactionRepository {
	mock := &MockTransactionRepository{ctrl: ctrl}
	mock.recorder = &MockTransactionRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionRepository) EXPECT() *MockTransactionRepositoryMockRecorder {
	return m.recorder
}

// AdjustBalance mocks base method.
func (m *MockTransactionRepository) AdjustBalance(ctx *gin.Context, transaction *entities.Transaction, dbTxn *gorm.DB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdjustBalance", ctx, transaction, dbTxn)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdjustBalance indicates an expected call of AdjustBalance.
func (mr *MockTransactionRepositoryMockRecorder) AdjustBalance(ctx, transaction, dbTxn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdjustBalance", reflect.TypeOf((*MockTransactionRepository)(nil).AdjustBalance), ctx, transaction, dbTxn)
}

// CreateTransaction mocks base method.
func (m *MockTransactionRepository) CreateTransaction(ctx *gin.Context, transaction entities.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", ctx, transaction)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTransaction indicates an expected call of CreateTransaction.
func (mr *MockTransactionRepositoryMockRecorder) CreateTransaction(ctx, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockTransactionRepository)(nil).CreateTransaction), ctx, transaction)
}
