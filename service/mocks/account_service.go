// Code generated by MockGen. DO NOT EDIT.
// Source: account_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	request "transact-api/model/dto/request"
	response "transact-api/model/dto/response"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountService is a mock of AccountService interface.
type MockAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceMockRecorder
}

// MockAccountServiceMockRecorder is the mock recorder for MockAccountService.
type MockAccountServiceMockRecorder struct {
	mock *MockAccountService
}

// NewMockAccountService creates a new mock instance.
func NewMockAccountService(ctrl *gomock.Controller) *MockAccountService {
	mock := &MockAccountService{ctrl: ctrl}
	mock.recorder = &MockAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountService) EXPECT() *MockAccountServiceMockRecorder {
	return m.recorder
}

// GetAccount mocks base method.
func (m *MockAccountService) GetAccount(ctx *gin.Context, documentNumber string) (*response.AccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", ctx, documentNumber)
	ret0, _ := ret[0].(*response.AccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountServiceMockRecorder) GetAccount(ctx, documentNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountService)(nil).GetAccount), ctx, documentNumber)
}

// InsertAccount mocks base method.
func (m *MockAccountService) InsertAccount(ctx *gin.Context, req request.AccountCreateRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertAccount", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertAccount indicates an expected call of InsertAccount.
func (mr *MockAccountServiceMockRecorder) InsertAccount(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertAccount", reflect.TypeOf((*MockAccountService)(nil).InsertAccount), ctx, req)
}
